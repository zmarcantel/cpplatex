import os

Import('global_env')

env = global_env.Clone()

# allowed colored terminal
colored = False
if 'TERM' in os.environ:
    colored = True
    env['ENV']['TERM'] = os.environ['TERM']

env.Append(LIBS = 'gtest')
env.Append(LIBS = 'pthread')

if GetOption('cov'):
    env.Append(LIBS = "gcov")
    env.Append(CXXFLAGS = "--coverage")
    env.Append(LDFLAGS = "--coverage")


outdir = GetOption('outdir')
curr_path = os.path.join(Dir('#').abspath, 'test')
sources = env.get_files(curr_path, ['cpp', 'c'])
objects = map(lambda x: env.Object(x, variant_dir=outdir, duplicate=False), sources)

tests = env.Program('cpplatex_tests', objects)

testbin = os.path.join(outdir, "test/cpplatex_tests")
action = Command(target="test", source=tests, action="{} {}".format(testbin, '--gtest_color=yes' if colored else ""))
Depends( action, tests )

if GetOption('cov'):
    coverage = Command(target="coverage", source=action, action="gcovr -r .")
    Depends( action, tests )
    Return('coverage')
else:
    Return('action')
